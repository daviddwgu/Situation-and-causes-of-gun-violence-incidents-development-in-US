install.packages('ggmap')
library(ggmap)
library(ggplot2)
library(maps)
install.packages('maps')
library(ggmap)
library(ggplot2)
library(maps)
install.packages('mapproj')
library(ggplot2)
head(iris)
iris
irises <- iris[-5]
head(irises)
species_labels = iris[,5]
library(colorspace)
species_col = rev(rainbow_hcl(3))[as.numeric(species_labels)]
pairs(irises, col = species_col,
lower.panel = NULL,
cex.labels=2, pch=19, cex = 1.2)
pairs(irises, col = species_col,
lower.panel = NULL,
cex.labels=2, pch=19, cex = 1.2)
par(xpd = TRUE)
legend(x = 0.05, y = 0.4, cex = 2,
legend = as.character(levels(species_labels)),
fill = unique(species_col))
par(xpd = NA)
fit <- kmeans(irises, 3, nstart = 25)
fit
fit
df <- data.frame(irises)
df$cluster <- factor(fit$cluster)
df$cluster
ggplot(data = df, aes(x = Sepal.Length, y = Petal.Length, color = cluster)) +
geom_point()
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point()
library(shiny); runApp('C:/Users/David/Desktop/FIT5147_A1_R/FIT5147A1_R_29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A1_R/FIT5147A1_R_29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A1_R/FIT5147A1_R_29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A1_R/FIT5147A1_R_29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A1_R/FIT5147A1_R_29910226.R')
library(shiny); runApp('C:/Users/David/Desktop/29910226_Dawei_Gu/FIT5147A1_R_29910226.R')
library(shiny); runApp('C:/Users/David/Desktop/FIT5147_A1_R/FIT5147A1_R_29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A1_R/FIT5147A1_R_29910226.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
runApp('C:/Users/David/Desktop/example.R')
library(shiny); runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
library(shiny); runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
library(shiny); runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
library(shiny); runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
library(shiny); runApp('C:/Users/David/Desktop/FIT5147_A3/Data_visualisation/29910226.R')
library(maps)
library(leaflet)
#set direction
setwd("C:/Users/David/Desktop/FIT5147_A3/Data_visualisation")
#load q1 dataset
q3_2 <- read.csv('q3_2.csv')
q3_2$state <- tolower(q3_2$state)
q3_2
mapstates <-map('state',fill=TRUE, plot=FALSE)
splitename <- strsplit(mapstates$names, ':')
firstpartnames <- lapply(splitename, function(x) x[1])
mapstates$names <- firstpartnames
mapstates
mapstates
mapstates$names
library(maps)
mapstates
mapstates[38]
mapstates[39]
library(maps)
library(leaflet)
#set direction
setwd("C:/Users/David/Desktop/FIT5147_A3/Data_visualisation")
#load q1 dataset
q3_2 <- read.csv('q3_2.csv')
q3_2$state <- tolower(q3_2$state)
q3_2
mapstates <-map('state',fill=TRUE, plot=FALSE)
splitename <- strsplit(mapstates$names, ':')
firstpartnames <- lapply(splitename, function(x) x[1])
mapstates$names <- firstpartnames
mapstates$names
#load q1 dataset
q2_1 <- read.csv('q2_1.csv')
q2_1$state <- tolower(q2_1$state)
q2_1
temp_data <- q2_1
temp_data
rates <- temp_data$count[match(mapstates$names, temp_data$state)]
state_label <- temp_data$state[match(mapstates$names, temp_data$state)]
state_label
cpal <- colorNumeric('Reds', rates)
leaflet(mapstates) %>%
addTiles() %>%
addPolygons(
stroke = TRUE,
smoothFactor = 1,
fillOpacity = 1,
color = "black",
opacity = 0.03,
fillColor = ~cpal(rates),
label=state_label
)
temp <- q3[q3$state == "Texas", ]
runApp('29910226.R')
#load library
library(shiny)
library(maps)
library(leaflet)
library(ggplot2)
#set work directory
setwd("C:/Users/David/Desktop/FIT5147_A3/Data_visualisation")
#load q1 dataset
q1 <- read.csv('q1.csv')
q1[,'count'] <- 1
#load first type of q2 data and make the state name to lower for map data matching
q2_1 <- read.csv('q2_1.csv')
q2_1$state <- tolower(q2_1$state)
#load second type of q2 data and make the state name to lower for map data
# matching, also make the unemployment rate ready to show in the line chart.
q2_2 <- read.csv('q2_2.csv')
q2_2$state <- tolower(q2_2$state)
q2_2[,'unemployment'] <- q2_2[,'unemployment']*600
#load the q3 data, and make the state name to lower for map data matching.
q3_2 <- read.csv('q3_2.csv')
q3_2$state <- tolower(q3_2$state)
#set up the map data, and make the name of state properly
mapstates <-map('state',fill=TRUE, plot=FALSE)
splitename <- strsplit(mapstates$names, ':')
firstpartnames <- lapply(splitename, function(x) x[1])
mapstates$names <- firstpartnames
temp_data <- q2_1
temp_data
rates <- temp_data$count[match(mapstates$names, temp_data$state)]
state_label <- temp_data$state[match(mapstates$names, temp_data$state)]
state_label
cpal <- colorNumeric('Reds', rates)
leaflet(mapstates) %>%
addTiles() %>%
addPolygons(
stroke = TRUE,
smoothFactor = 1,
fillOpacity = 1,
color = "black",
opacity = 0.03,
fillColor = ~cpal(rates),
label=state_label
)
leaflet(mapstates) %>%
addTiles() %>%
addPolygons(
stroke = TRUE,
smoothFactor = 0.6,
fillOpacity = 1,
color = "black",
opacity = 0.03,
fillColor = ~cpal(rates),
label=state_label
)
#load library
library(shiny)
library(maps)
library(leaflet)
library(ggplot2)
#set work directory
setwd("C:/Users/David/Desktop/FIT5147_A3/Data_visualisation")
#load q1 dataset
q1 <- read.csv('q1.csv')
q1[,'count'] <- 1
#load first type of q2 data and make the state name to lower for map data matching
q2_1 <- read.csv('q2_1.csv')
q2_1$state <- tolower(q2_1$state)
#load second type of q2 data and make the state name to lower for map data
# matching, also make the unemployment rate ready to show in the line chart.
q2_2 <- read.csv('q2_2.csv')
q2_2$state <- tolower(q2_2$state)
q2_2[,'unemployment'] <- q2_2[,'unemployment']*600
#load the q3 data, and make the state name to lower for map data matching.
q3_2 <- read.csv('q3_2.csv')
q3_2$state <- tolower(q3_2$state)
#set up the map data, and make the name of state properly
mapstates <-map('state',fill=TRUE, plot=FALSE)
splitename <- strsplit(mapstates$names, ':')
firstpartnames <- lapply(splitename, function(x) x[1])
mapstates$names <- firstpartnames
temp_data <- q2_1
temp_data
rates <- temp_data$count[match(mapstates$names, temp_data$state)]
state_label <- temp_data$state[match(mapstates$names, temp_data$state)]
state_label
cpal <- colorNumeric('Reds', rates)
leaflet(mapstates) %>%
addTiles() %>%
addPolygons(
stroke = TRUE,
smoothFactor = 0.6,
fillOpacity = 1,
color = "black",
opacity = 0.03,
fillColor = ~cpal(rates),
label=state_label
)
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
library(maps)
library(leaflet)
#set direction
setwd("C:/Users/David/Desktop/FIT5147_A3/Data_visualisation")
#load q1 dataset
q2_1 <- read.csv('q2_1.csv')
q2_1$state <- tolower(q2_1$state)
q2_1
mapstates <-map('state',fill=TRUE, plot=FALSE)
splitename <- strsplit(mapstates$names, ':')
firstpartnames <- lapply(splitename, function(x) x[1])
mapstates$names <- firstpartnames
mapstates[39]
mapstates$names
temp_data <- q2_1
temp_data
rates <- temp_data$count[match(mapstates$names, temp_data$state)]
state_label <- temp_data$state[match(mapstates$names, temp_data$state)]
state_label
cpal <- colorNumeric('Reds', rates)
leaflet(mapstates) %>%
addTiles() %>%
addPolygons(
stroke = TRUE,
smoothFactor = 1,
fillOpacity = 1,
color = "black",
opacity = 0.03,
fillColor = ~cpal(rates),
label=state_label,
layerId = state_label
)
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
mapstates$names
runApp('29910226.R')
runApp('29910226.R')
runApp('29910226.R')
mapsates
library(maps)
library(leaflet)
#set direction
setwd("C:/Users/David/Desktop/FIT5147_A3/Data_visualisation")
#load q1 dataset
q2_1 <- read.csv('q2_1.csv')
q2_1$state <- tolower(q2_1$state)
q2_1
mapstates <-map('state',fill=TRUE, plot=FALSE)
splitename <- strsplit(mapstates$names, ':')
firstpartnames <- lapply(splitename, function(x) x[1])
mapstates$names <- firstpartnames
mapstates
typeof(mapstates)
mapstates = mapstates[!duplicated(mapstates$names),]
mapstates = mapstates[order(mapstates[,'names'],]
mapstates = mapstates[order(mapstates[,'names']),]
mapstates = mapstates[!duplicated(mapstates[ , c("names")]),]
library(shiny); runApp('29910226.R')
library(shiny); runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
library(shiny); runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
runApp('29910226_Data_Visualisation.R')
library(shiny); runApp('29910226_Data_Visualisation.R')
